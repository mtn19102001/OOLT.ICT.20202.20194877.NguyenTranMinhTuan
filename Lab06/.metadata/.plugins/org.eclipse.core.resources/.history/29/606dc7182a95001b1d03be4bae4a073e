package lab04.hust.soict.globalict.aims.media;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;

public class DigitalVideoDisc extends Media{
	private ArrayList<DigitalVideoDisc> itemsOrdered = new ArrayList<DigitalVideoDisc>();
	private String director;
	private int length;
	private static int nbDigitalVideoDisc = 0;
	private LocalDate dateAdded;
	public String getDirector() {
		return director;
	}
	public int getLength() {
		return length;
	}
	//construction method
	//QUESTION: Yes.Java allows to do that.
	
	public DigitalVideoDisc(String title) {
		super();
		this.title = title;
		this.id = ++nbDigitalVideoDisc;
		this.dateAdded = LocalDate.now();
	}
	public DigitalVideoDisc(String title, String category, float cost) {
		super();
		this.title = title;
		this.category = category;
		this.cost = cost;
		this.id = ++nbDigitalVideoDisc;
		this.dateAdded = LocalDate.now();
	}
	public DigitalVideoDisc(int id) {
		super();
		this.id = id;
	}
	public DigitalVideoDisc(String title, String category, String director, float cost) {
		super();
		this.title = title;
		this.category = category;
		this.director = director;
		this.cost = cost;
		this.id = ++nbDigitalVideoDisc;
		this.dateAdded = LocalDate.now();
	}
	public DigitalVideoDisc(String title, String category, String director, int length, float cost) {
		super();
		this.title = title;
		this.category = category;
		this.director = director;
		this.length = length;
		this.cost = cost;
		this.id = ++nbDigitalVideoDisc;
		this.dateAdded = LocalDate.now();
	}
	public void displayMedia() {
		if(itemsOrdered.size() == 0) {
			System.out.println("The cart is empty");
		}else {
			System.out.println("The cart has " + itemsOrdered.size() + " item(s):");
			for(int i = 0; i < itemsOrdered.size(); i++) {
				if(itemsOrdered.get(i).getDirector() == null) {
					System.out.println((i + 1) + ". " + itemsOrdered.get(i).getTitle().toString() + " - " + itemsOrdered.get(i).getCategory().toString() + " - " 
						+ "undefined director" + " - " + itemsOrdered.get(i).getLength() + " - " + itemsOrdered.get(i).getCost());
				}else {
					System.out.println((i + 1) + ". " + itemsOrdered.get(i).getTitle().toString() + " - " + itemsOrdered.get(i).getCategory().toString() + " - " 
							+ itemsOrdered.get(i).getDirector() + " - " + itemsOrdered.get(i).getLength() + " - " + itemsOrdered.get(i).getCost());
				}
			}
		}
	}
}
